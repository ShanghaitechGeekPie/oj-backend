#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Copyright 2018 ericdiao <hi@ericdiao.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

"""
Notice that a `app_label` tag `oj_backend` is defined in every model in
`backend/models.py`, this file is generated using
`python3 manage.py mikemigrations oj_backend`.
 - ericdiao
"""

# Generated by Django 2.1.3 on 2018-12-09 08:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import oj_backend.backend.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('uid', models.CharField(default=oj_backend.backend.models.uuid1str, editable=False,
                                         max_length=32, primary_key=True, serialize=False, unique=True, verbose_name='唯一标识符')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('descr_link', models.URLField(
                    max_length=512, verbose_name='作业描述链接')),
                ('grade', models.FloatField(verbose_name='总成绩')),
                ('deadline', models.DateTimeField(verbose_name='截止日期')),
                ('release_date', models.DateTimeField(verbose_name='发布日期')),
            ],
            options={
                'ordering': ['release_date', 'deadline'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('uid', models.CharField(default=oj_backend.backend.models.uuid1str, editable=False,
                                         max_length=32, primary_key=True, serialize=False, unique=True, verbose_name='课程唯一标识符')),
                ('code', models.CharField(max_length=255, verbose_name='课程代码')),
                ('name', models.CharField(max_length=255, verbose_name='课程名称')),
                ('year', models.IntegerField(verbose_name='学年')),
                ('semaster', models.CharField(max_length=255, verbose_name='学期')),
                ('homepage', models.URLField(max_length=512, verbose_name='课程主页')),
            ],
            options={
                'ordering': ['code', 'year', 'semaster'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('massage', models.FileField(upload_to='', verbose_name='返回消息')),
                ('grade', models.IntegerField(verbose_name='成绩')),
                ('delta', models.IntegerField(verbose_name='成绩差')),
                ('git_commit_id', models.CharField(max_length=40, primary_key=True,
                                                   serialize=False, unique=True, verbose_name='git提交号码')),
                ('grade_time', models.DateTimeField()),
                ('submission_time', models.DateTimeField()),
                ('assignment', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='oj_backend.Assignment')),
            ],
            options={
                'ordering': ['grade_time'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('uid', models.CharField(default=oj_backend.backend.models.uuid1str, editable=False,
                                         max_length=32, primary_key=True, serialize=False, unique=True, verbose_name='用户标识符')),
                ('email', models.EmailField(
                    max_length=254, unique=True, verbose_name='电子邮箱')),
                ('name', models.CharField(max_length=255, verbose_name='姓名')),
                ('rsa_pub_key', models.FileField(
                    upload_to='', verbose_name='SSH 公钥')),
                ('disabled', models.BooleanField(default=False, verbose_name='禁用')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                  parent_link=True, primary_key=True, serialize=False, to='oj_backend.User')),
            ],
            options={
                'ordering': ['uid'],
            },
            bases=('oj_backend.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                  parent_link=True, primary_key=True, serialize=False, to='oj_backend.User')),
                ('student_id', models.CharField(max_length=255, verbose_name='学号')),
                ('nickname', models.CharField(max_length=255, verbose_name='昵称')),
            ],
            options={
                'ordering': ['student_id'],
            },
            bases=('oj_backend.user',),
        ),
        migrations.AddField(
            model_name='user',
            name='auth_user',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assignment',
            name='course',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='oj_backend.Course'),
        ),
        migrations.AddField(
            model_name='record',
            name='student',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='oj_backend.Student'),
        ),
        migrations.AddField(
            model_name='course',
            name='instructor',
            field=models.ManyToManyField(to='oj_backend.Instructor'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(to='oj_backend.Student'),
        ),
    ]
